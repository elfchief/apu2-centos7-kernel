--- linux-3.10.0-327.28.2.el7.wwp_soekris.x86_64.orig/drivers/leds/Kconfig	2016-06-27 09:03:38.000000000 +0000
+++ linux-3.10.0-327.28.2.el7.wwp_soekris.x86_64/drivers/leds/Kconfig	2016-08-15 16:15:09.274242065 +0000
@@ -106,6 +106,15 @@
 	  This option enables support for the Soekris net4801 and net4826 error
 	  LED.
 
+config LEDS_NET6501
+	tristate "LED Support for Soekris net6501 series LEDs"
+	depends on LEDS_CLASS
+	depends on X86
+	depends on SOEKRIS_NET6501
+	help
+	  This option enables support for the Soekris net6501 Error and Ready
+	  LED. It does nothing unless the soekris-net6501 driver is loaded too.
+
 config LEDS_FSG
 	tristate "LED Support for the Freecom FSG-3"
 	depends on LEDS_CLASS
--- linux-3.10.0-327.28.2.el7.wwp_soekris.x86_64.orig/drivers/leds/Makefile	2016-06-27 09:03:38.000000000 +0000
+++ linux-3.10.0-327.28.2.el7.wwp_soekris.x86_64/drivers/leds/Makefile	2016-08-15 16:15:45.887414149 +0000
@@ -15,6 +15,7 @@
 obj-$(CONFIG_LEDS_MIKROTIK_RB532)	+= leds-rb532.o
 obj-$(CONFIG_LEDS_S3C24XX)		+= leds-s3c24xx.o
 obj-$(CONFIG_LEDS_NET48XX)		+= leds-net48xx.o
+obj-$(CONFIG_LEDS_NET6501)		+= leds-net6501.o
 obj-$(CONFIG_LEDS_WRAP)			+= leds-wrap.o
 obj-$(CONFIG_LEDS_COBALT_QUBE)		+= leds-cobalt-qube.o
 obj-$(CONFIG_LEDS_COBALT_RAQ)		+= leds-cobalt-raq.o
--- linux-3.10.0-327.28.2.el7.wwp_soekris.x86_64.orig/drivers/leds/leds-net6501.c	1970-01-01 00:00:00.000000000 +0000
+++ linux-3.10.0-327.28.2.el7.wwp_soekris.x86_64/drivers/leds/leds-net6501.c	2016-08-15 16:12:41.490547501 +0000
@@ -0,0 +1,127 @@
+/*
+ * LED devices for the Soekris Net6501
+ * http://www.mail-archive.com/soekris-tech@lists.soekris.com/msg06738.html
+ *
+ * Copyright 2012 Chris Wilson <chris+soekris@aptivate.org>
+ * based on leds-hp6xx.c by Kristoffer Ericson <kristoffer.ericson@gmail.com>
+ * parts based on gdrom.c by Adrian McMenamin <adrian@mcmen.demon.co.uk>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/module.h>
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/leds.h>
+
+/*
+ * These magic numbers come from a post by Soren Kristensen (the board
+ * designer?) on the soekris mailing list:
+ * http://www.mail-archive.com/soekris-tech@lists.soekris.com/msg06738.html
+ */ 
+#define LED_ERROR 0x069C
+#define LED_READY 0x069D
+#define REGION_START 0x069C
+#define REGION_LEN 2
+
+#define DRIVER_NAME "leds-net6501"
+
+static void net6501_led_error_set(struct led_classdev *led_cdev,
+	enum led_brightness value)
+{
+	u8 old_value, new_value;
+
+	old_value = inb(LED_ERROR);
+	new_value = (old_value & ~1) | (value ? 1 : 0);
+	outb(new_value, LED_ERROR);
+}
+
+static void net6501_led_ready_set(struct led_classdev *led_cdev,
+	enum led_brightness value)
+{
+	u8 old_value, new_value;
+
+	old_value = inb(LED_READY);
+	new_value = (old_value & ~1) | (value ? 1 : 0);
+	outb(new_value, LED_READY);
+}
+
+static struct led_classdev net6501_led_error = {
+	.name			= "net6501:red:error",
+	.default_trigger	= "timer",
+	.brightness_set		= net6501_led_error_set,
+	.flags			= LED_CORE_SUSPENDRESUME,
+};
+
+static struct led_classdev net6501_led_ready = {
+	.name			= "net6501:green:ready",
+	.default_trigger	= NULL,
+	.brightness_set		= net6501_led_ready_set,
+	.flags			= LED_CORE_SUSPENDRESUME,
+};
+
+static int net6501_leds_probe(struct platform_device *pdev)
+{
+	int ret;
+
+	if (!request_region(REGION_START, REGION_LEN, DRIVER_NAME))
+	{
+		printk(KERN_WARNING DRIVER_NAME ": I/O region 0x%x-0x%x "
+			"is busy\n", REGION_START,
+			REGION_START + REGION_LEN - 1);
+		return -EBUSY;
+	}
+
+	ret = led_classdev_register(&pdev->dev, &net6501_led_error);
+	if (ret < 0)
+	{
+		printk(KERN_WARNING DRIVER_NAME ": failed to register "
+			"error LED device: error %d\n", ret);
+		goto release_registered_region;
+	}
+
+	ret = led_classdev_register(&pdev->dev, &net6501_led_ready);
+	if (ret < 0)
+	{
+		printk(KERN_WARNING DRIVER_NAME ": failed to register "
+			"ready LED device: error %d\n", ret);
+		goto unregister_led_error;
+	}
+
+	return 0;
+
+unregister_led_error:
+	led_classdev_unregister(&net6501_led_error);
+
+release_registered_region:
+	release_region(REGION_START, REGION_LEN);
+
+	return ret;
+}
+
+static int net6501_leds_remove(struct platform_device *pdev)
+{
+	led_classdev_unregister(&net6501_led_ready);
+	led_classdev_unregister(&net6501_led_error);
+	release_region(REGION_START, REGION_LEN);
+	return 0;
+}
+
+static struct platform_driver net6501_leds_driver = {
+	.probe		= net6501_leds_probe,
+	.remove		= net6501_leds_remove,
+	.driver		= {
+		.name		= DRIVER_NAME,
+		.owner		= THIS_MODULE,
+	},
+};
+
+module_platform_driver(net6501_leds_driver);
+
+MODULE_AUTHOR("Chris Wilson <chris+soekris@aptivate.org>");
+MODULE_DESCRIPTION("Soekris Net6051 LED driver");
+MODULE_LICENSE("GPL");
+MODULE_ALIAS("platform:" DRIVER_NAME);
--- linux-3.10.0-327.28.2.el7.wwp_soekris.x86_64.orig/drivers/platform/x86/Kconfig	2016-06-27 09:03:38.000000000 +0000
+++ linux-3.10.0-327.28.2.el7.wwp_soekris.x86_64/drivers/platform/x86/Kconfig	2016-08-15 16:13:51.623877113 +0000
@@ -779,6 +779,16 @@
 	  This driver provides support for backlight control on Samsung Q10
 	  and related laptops, including Dell Latitude X200.
 
+config SOEKRIS_NET6501
+	tristate "Soekris Net6501 Extras"
+	depends on X86
+	---help---
+	  This driver provides support for the Ready and Error LEDs on the
+	  Soekris Net6501, along with leds-net6501.
+
+	  To compile this driver as a module, choose M here: the module
+	  will be called soekris-net6501.
+
 config APPLE_GMUX
 	tristate "Apple Gmux Driver"
 	depends on ACPI
--- linux-3.10.0-327.28.2.el7.wwp_soekris.x86_64.orig/drivers/platform/x86/Makefile	2016-06-27 09:03:38.000000000 +0000
+++ linux-3.10.0-327.28.2.el7.wwp_soekris.x86_64/drivers/platform/x86/Makefile	2016-08-15 16:14:21.658018270 +0000
@@ -50,6 +50,7 @@
 obj-$(CONFIG_INTEL_MID_POWER_BUTTON)	+= intel_mid_powerbtn.o
 obj-$(CONFIG_INTEL_OAKTRAIL)	+= intel_oaktrail.o
 obj-$(CONFIG_SAMSUNG_Q10)	+= samsung-q10.o
+obj-$(CONFIG_SOEKRIS_NET6501)   += soekris-net6501.o
 obj-$(CONFIG_APPLE_GMUX)	+= apple-gmux.o
 obj-$(CONFIG_CHROMEOS_LAPTOP)	+= chromeos_laptop.o
 
--- linux-3.10.0-327.28.2.el7.wwp_soekris.x86_64.orig/drivers/platform/x86/soekris-net6501.c	1970-01-01 00:00:00.000000000 +0000
+++ linux-3.10.0-327.28.2.el7.wwp_soekris.x86_64/drivers/platform/x86/soekris-net6501.c	2016-08-15 16:12:41.491547505 +0000
@@ -0,0 +1,58 @@
+/*
+ *  Written by Chris Wilson <chris+soekris@aptivate.org>
+ *  Based on classmate-laptop.c by Thadeu Lima de Souza Cascardo
+ *
+ *  This driver does nothing except make leds-net6501 work, by creating its
+ *  platform device, as requested by Bryan Wu.
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License along
+ *  with this program; if not, write to the Free Software Foundation, Inc.,
+ *  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ */
+
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/platform_device.h>
+
+MODULE_LICENSE("GPL");
+
+#define NET6501_LEDS_DEVICE "leds-net6501"
+
+static struct platform_device *pd;
+
+static int net6501_init(void)
+{
+	pd = platform_device_register_simple(NET6501_LEDS_DEVICE, -1, NULL, 0);
+
+	if (IS_ERR(pd)) {
+		printk(KERN_WARNING NET6501_LEDS_DEVICE ": failed to register "
+			"platform device: error %ld\n", PTR_ERR(pd));
+		return PTR_ERR(pd);
+	}
+
+	dev_info(&pd->dev, "Soekris Net6501 board driver\n");
+	return 0;
+}
+
+static void net6501_exit(void)
+{
+	platform_device_unregister(pd);
+}
+
+module_init(net6501_init);
+module_exit(net6501_exit);
+
+MODULE_AUTHOR("Chris Wilson <chris+soekris@aptivate.org>");
+MODULE_DESCRIPTION("Soekris Net6051 board driver");
+MODULE_LICENSE("GPL");
+MODULE_ALIAS("platform:soekris-net6501");
